name: Deploy Blazor WebAssembly to GitHub Pages
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore packages
        run: dotnet restore

      - name: Publish .NET
        run: dotnet publish SharpFarm.csproj -c Release -o release

      - name: Build and copy Roslyn DLLs + loader.js
        run: |
          mkdir -p release/wwwroot/roslyn
          
          # Temp-Projekt f√ºr Roslyn
          dotnet new console -n TempRoslyn -o temp_roslyn
          cd temp_roslyn
          dotnet add package Microsoft.CodeAnalysis.CSharp --version 4.10.0
          dotnet add package Microsoft.CodeAnalysis.Scripting --version 4.10.0
          dotnet restore
          dotnet build -c Release
          
          # DLLs kopieren nach wwwroot/roslyn
          FRAMEWORK=$(ls bin/Release)
          cp bin/Release/$FRAMEWORK/*.dll ../release/wwwroot/roslyn/

          # loader.js generieren
          cat <<'EOF' > ../release/wwwroot/roslyn/loader.js
window.CSharpWasm = {
    runScript: async function(code, worldRef) {
        if (!window.csharpWasmReady) {
            await loadCSharpWasm();
            window.csharpWasmReady = true;
        }
        await CSharpWasm.eval(code, { world: worldRef });
    }
};

async function loadCSharpWasm() {
    // Hier die CSharpWasm Bootstrap-Dateien laden, z.B. von /SharpFarm/roslyn/
}
EOF

          cd ..
          rm -rf temp_roslyn

      - name: Change base-href
        run: |
          sed -i 's|<base href="/"|<base href="/SharpFarm/"|' release/wwwroot/index.html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release/wwwroot
          force_orphan: true
